/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KEY[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("HEX0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 40;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUT[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUT";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 40;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

SIGNAL("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 3150.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 6780.0;
		}
	}
}

TRANSITION_LIST("KEY[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("HEX0[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("HEX0[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.338;
			LEVEL 1 FOR 9989.662;
		}
	}
}

TRANSITION_LIST("HEX0[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.243;
			LEVEL 0 FOR 9987.757;
		}
	}
}

TRANSITION_LIST("HEX0[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.268;
			LEVEL 0 FOR 9990.732;
		}
	}
}

TRANSITION_LIST("HEX0[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.813;
			LEVEL 0 FOR 9990.187;
		}
	}
}

TRANSITION_LIST("HEX0[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.541;
			LEVEL 0 FOR 9989.459;
		}
	}
}

TRANSITION_LIST("HEX0[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.574;
			LEVEL 0 FOR 9988.426;
		}
	}
}

TRANSITION_LIST("HEX0[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.679;
			LEVEL 0 FOR 9989.321;
		}
	}
}

TRANSITION_LIST("OUT[39]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.055;
			LEVEL 0 FOR 9995.945;
		}
	}
}

TRANSITION_LIST("OUT[38]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.086;
			LEVEL 0 FOR 9995.914;
		}
	}
}

TRANSITION_LIST("OUT[37]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.299;
			LEVEL 0 FOR 9995.701;
		}
	}
}

TRANSITION_LIST("OUT[36]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.958;
			LEVEL 0 FOR 9996.042;
		}
	}
}

TRANSITION_LIST("OUT[35]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.746;
			LEVEL 0 FOR 9996.254;
		}
	}
}

TRANSITION_LIST("OUT[34]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.958;
			LEVEL 0 FOR 9996.042;
		}
	}
}

TRANSITION_LIST("OUT[33]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.387;
			LEVEL 0 FOR 9995.613;
		}
	}
}

TRANSITION_LIST("OUT[32]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.988;
			LEVEL 0 FOR 9996.012;
		}
	}
}

TRANSITION_LIST("OUT[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.124;
			LEVEL 0 FOR 9993.876;
		}
	}
}

TRANSITION_LIST("OUT[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.074;
			LEVEL 0 FOR 9993.926;
		}
	}
}

TRANSITION_LIST("OUT[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.411;
			LEVEL 0 FOR 9994.589;
		}
	}
}

TRANSITION_LIST("OUT[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.262;
			LEVEL 0 FOR 9995.738;
		}
	}
}

TRANSITION_LIST("OUT[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.536;
			LEVEL 0 FOR 9995.464;
		}
	}
}

TRANSITION_LIST("OUT[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.616;
			LEVEL 0 FOR 9995.384;
		}
	}
}

TRANSITION_LIST("OUT[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.869;
			LEVEL 0 FOR 9993.131;
		}
	}
}

TRANSITION_LIST("OUT[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.476;
			LEVEL 0 FOR 9993.524;
		}
	}
}

TRANSITION_LIST("OUT[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.852;
			LEVEL 0 FOR 9996.148;
		}
	}
}

TRANSITION_LIST("OUT[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.792;
			LEVEL 0 FOR 9996.208;
		}
	}
}

TRANSITION_LIST("OUT[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.759;
			LEVEL 0 FOR 9996.241;
		}
	}
}

TRANSITION_LIST("OUT[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.803;
			LEVEL 0 FOR 9996.197;
		}
	}
}

TRANSITION_LIST("OUT[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.607;
			LEVEL 0 FOR 9996.393;
		}
	}
}

TRANSITION_LIST("OUT[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.655;
			LEVEL 0 FOR 9996.345;
		}
	}
}

TRANSITION_LIST("OUT[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.884;
			LEVEL 0 FOR 9996.116;
		}
	}
}

TRANSITION_LIST("OUT[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.624;
			LEVEL 0 FOR 9996.376;
		}
	}
}

TRANSITION_LIST("OUT[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.427;
			LEVEL 0 FOR 9996.573;
		}
	}
}

TRANSITION_LIST("OUT[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.337;
			LEVEL 0 FOR 9996.663;
		}
	}
}

TRANSITION_LIST("OUT[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.364;
			LEVEL 0 FOR 9996.636;
		}
	}
}

TRANSITION_LIST("OUT[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.799;
			LEVEL 0 FOR 9996.201;
		}
	}
}

TRANSITION_LIST("OUT[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.916;
			LEVEL 0 FOR 9996.084;
		}
	}
}

TRANSITION_LIST("OUT[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.571;
			LEVEL 0 FOR 9996.429;
		}
	}
}

TRANSITION_LIST("OUT[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.818;
			LEVEL 0 FOR 9996.182;
		}
	}
}

TRANSITION_LIST("OUT[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.637;
			LEVEL 0 FOR 8333.369;
			LEVEL 1 FOR 1662.994;
		}
	}
}

TRANSITION_LIST("OUT[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.868;
			LEVEL 0 FOR 2553.352;
			LEVEL 1 FOR 619.907;
			LEVEL 0 FOR 2600.093;
			LEVEL 1 FOR 2559.907;
			LEVEL 0 FOR 1661.873;
		}
	}
}

TRANSITION_LIST("OUT[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.356;
			LEVEL 0 FOR 1273.651;
			LEVEL 1 FOR 1279.608;
			LEVEL 0 FOR 1940.392;
			LEVEL 1 FOR 1279.608;
			LEVEL 0 FOR 1280.392;
			LEVEL 1 FOR 1279.608;
			LEVEL 0 FOR 1280.392;
			LEVEL 1 FOR 379.993;
		}
	}
}

TRANSITION_LIST("OUT[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.908;
			LEVEL 0 FOR 633.376;
			LEVEL 1 FOR 639.883;
			LEVEL 0 FOR 640.117;
			LEVEL 1 FOR 639.883;
			LEVEL 0 FOR 1300.117;
			LEVEL 1 FOR 639.883;
			LEVEL 0 FOR 640.117;
			LEVEL 1 FOR 639.883;
			LEVEL 0 FOR 640.117;
			LEVEL 1 FOR 639.883;
			LEVEL 0 FOR 640.117;
			LEVEL 1 FOR 639.883;
			LEVEL 0 FOR 640.117;
			LEVEL 1 FOR 639.883;
			LEVEL 0 FOR 382.833;
		}
	}
}

TRANSITION_LIST("OUT[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.634;
			LEVEL 0 FOR 313.351;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 299.908;
			LEVEL 0 FOR 360.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 319.908;
			LEVEL 0 FOR 320.092;
			LEVEL 1 FOR 62.015;
		}
	}
}

TRANSITION_LIST("OUT[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.759;
			LEVEL 0 FOR 153.39;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 139.869;
			LEVEL 0 FOR 200.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 160.131;
			LEVEL 1 FOR 159.869;
			LEVEL 0 FOR 62.982;
		}
	}
}

TRANSITION_LIST("OUT[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.611;
			LEVEL 0 FOR 73.362;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 59.897;
			LEVEL 0 FOR 120.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 80.103;
			LEVEL 1 FOR 79.897;
			LEVEL 0 FOR 63.13;
		}
	}
}

TRANSITION_LIST("OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.322;
			LEVEL 0 FOR 33.342;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 19.917;
			LEVEL 0 FOR 80.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 39.917;
			LEVEL 0 FOR 40.083;
			LEVEL 1 FOR 22.336;
		}
	}
}

TRANSITION_LIST("OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.395;
			LEVEL 0 FOR 13.323;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 80.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 19.936;
			LEVEL 0 FOR 20.064;
			LEVEL 1 FOR 2.282;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[39]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[38]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[37]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[36]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[35]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[34]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[33]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[32]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 8333.259;
			LEVEL 1 FOR 1666.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2553.259;
			LEVEL 1 FOR 620.0;
			LEVEL 0 FOR 2600.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 1666.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1273.259;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1940.0;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 386.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 633.259;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 1300.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 386.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 313.259;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 360.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 66.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 153.259;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 66.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 73.259;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 66.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 33.259;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 26.741;
		}
	}
}

TRANSITION_LIST("lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 13.259;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 6.741;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "lpmcounter:inst2|lpm_counter:LPM_COUNTER_component|cntr_8ki:auto_generated|counter_reg_bit[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 53;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
